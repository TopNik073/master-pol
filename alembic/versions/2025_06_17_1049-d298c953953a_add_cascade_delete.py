"""Add cascade delete

Revision ID: d298c953953a
Revises: f035437d96ba
Create Date: 2025-06-17 10:49:41.509259

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d298c953953a"
down_revision: Union[str, None] = "f035437d96ba"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Для products_import ↔ products_types
    op.drop_constraint(
        op.f("products_import_type_id_fkey"), "products_import", type_="foreignkey"
    )
    op.alter_column(
        "products_import", "type_id", existing_type=sa.UUID(), nullable=True
    )
    op.create_foreign_key(
        op.f("products_import_type_id_fkey"),
        "products_import",
        "products_types",
        ["type_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # Для products ↔ products_import (ваша часть)
    op.drop_constraint(
        op.f("products_product_import_id_fkey"), "products", type_="foreignkey"
    )
    op.alter_column(
        "products", "product_import_id", existing_type=sa.UUID(), nullable=True
    )
    op.create_foreign_key(
        op.f("products_product_import_id_fkey"),
        "products",
        "products_import",
        ["product_import_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # Для products ↔ partners (ваша часть)
    op.drop_constraint(op.f("products_partner_id_fkey"), "products", type_="foreignkey")
    op.alter_column("products", "partner_id", existing_type=sa.UUID(), nullable=True)
    op.create_foreign_key(
        op.f("products_partner_id_fkey"),
        "products",
        "partners",
        ["partner_id"],
        ["id"],
        ondelete="SET NULL",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Восстановление products ↔ partners
    op.drop_constraint(op.f("products_partner_id_fkey"), "products", type_="foreignkey")
    op.create_foreign_key(
        op.f("products_partner_id_fkey"),
        "products",
        "partners",
        ["partner_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column("products", "partner_id", existing_type=sa.UUID(), nullable=False)

    # Восстановление products ↔ products_import
    op.drop_constraint(
        op.f("products_product_import_id_fkey"), "products", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("products_product_import_id_fkey"),
        "products",
        "products_import",
        ["product_import_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column(
        "products", "product_import_id", existing_type=sa.UUID(), nullable=False
    )

    # Восстановление products_import ↔ products_types
    op.drop_constraint(
        op.f("products_import_type_id_fkey"), "products_import", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("products_import_type_id_fkey"),
        "products_import",
        "products_types",
        ["type_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.alter_column(
        "products_import", "type_id", existing_type=sa.UUID(), nullable=False
    )
    # ### end Alembic commands ###
